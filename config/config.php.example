<?php

return [
    // override default branding style (templates/CSS) with custom style.
    // NOTE: the styling/branding MUST be installed for this to work!
    // DEFAULT = null
    //'styleName' => 'eduVPN',
    //'styleName' => 'LC',

    // DEFAULT = FormPdoAuthentication
    //'authMethod' => 'FormPdoAuthentication',      // PDO (database)
    //'authMethod' => 'FormLdapAuthentication',     // LDAP
    //'authMethod' => 'FormRadiusAuthentication',   // RADIUS
    //'authMethod' => 'PhpSamlSpAuthentication',    // SAML (php-saml-sp)
    //'authMethod' => 'MellonAuthentication',       // SAML (mod_auth_mellon)
    //'authMethod' => 'ShibAuthentication',         // SAML (Shibboleth)

    // Default Session Expiry
    // The session expiry will be used to determine the "Not After" of the
    // issued X.509 certificates and the moment at which to start rejecting
    // the OAuth tokens.
    // DEFAULT = P90D
    //'sessionExpiry' => 'P90D',      // 90 days
    //'sessionExpiry' => 'PT12H',   // 12 hours
    //'sessionExpiry' => 'P1D',     // 1 day

    // XXX where is permissionAttribute? Make sure it is an array!
//    // LDAP
//    'FormLdapAuthentication' => [
//        // *** FreeIPA ***
//        // -H ldap://ipa.tuxed.example
//        'ldapUri' => 'ldap://ipa.tuxed.example',
//        // -D "uid=fkooman,cn=users,cn=accounts,dc=tuxed,dc=example"
//        'bindDnTemplate' => 'uid={{UID}},cn=users,cn=accounts,dc=tuxed,dc=example',
//        // (if -b is the same -D we do NOT specify baseDn...)
//        // to normalize the entered user ID, specify the attribute you want to
//        // use to identify the user in the VPN server
//        'userIdAttribute' => 'uid',

//        // *** AD (NetBIOS domain name) ***
//        // -H ldap://ad.example.org \
//        'ldapUri' => 'ldap://ad.example.org',
//        // -D "DOMAIN\fkooman" \
//        'bindDnTemplate' => 'DOMAIN\{{UID}}',
//        // -b "dc=example,dc=org" \
//        'baseDn' => 'dc=example,dc=org',
//        // "(sAMAccountName=fkooman)"
//        'userFilterTemplate' => '(sAMAccountName={{UID}})',
//        // to normalize the entered user ID, specify the attribute you want to
//        // use to identify the user in the VPN server
//        'userIdAttribute' => 'sAMAccountName',

//        // *** AD (userPrincipalName) ***
//        // -H ldap://ad.example.org \
//        'ldapUri' => 'ldap://ad.example.org',
//        // -D "fkooman@example.org" \
//        'bindDnTemplate' => '{{UID}}',

//        // when the user does NOT specify the realm, e.g. only "fkooman", this
//        // option will add "@example.org" to the "User Name" as specified on
//        // the login page. If and only if there is no "@" in the provided
//        // "User Name".!
//        'addRealm' => 'example.org',
//        // -b "dc=example,dc=org" \
//        'baseDn' => 'dc=example,dc=org',
//        // "(userPrincipalName=fkooman@example.org)"
//        'userFilterTemplate' => '(userPrincipalName={{UID}})',
//        // to normalize the entered user ID, specify the attribute you want to
//        // use to identify the user in the VPN server
//        'userIdAttribute' => 'userPrincipalName',
//
//        // *** Search First ***
//        // -H ldap://server.ipa.test \
//        'ldapUri' => 'ldap://server.ipa.test',
//        // -b "cn=users,cn=accounts,dc=ipa,dc=test" \
//        'baseDn' => 'cn=users,cn=accounts,dc=ipa,dc=test',
//        // "(uidNumber=572600001)" \
//        'userFilterTemplate' => '(uidNumber={{UID}})',
//        // to normalize the entered user ID, specify the attribute you want to
//        // use to identify the user in the VPN server
//        'userIdAttribute' => 'uidNumber',
//        // in vpn-user-portal >= 2.3.8 you can also perform a bind before
//        // searching as not all LDAP servers allow anonymous bind to search the
//        // directory. If at all possible, allow anonymous bind on your LDAP
//        // server from the VPN server. NEVER USE THE LDAP ADMIN ACCOUNT HERE!
//        //'searchBindDn' => 'cn=Anonymous Search User,dc=example,dc=org',
//        //'searchBindPass' => 's3r3t',
//    ],

//    // RADIUS
//    'FormRadiusAuthentication' => [
//        'serverList' => [
//            [
//                'host' => 'radius.example.org',
//                'secret' => 'testing123',
//                //'port' => 1812,
//            ],
//        ],
//        //'addRealm' => 'example.org',
//        //'nasIdentifier' => 'vpn.example.org',
//    ],

//    // SAML (php-saml-sp)
//    'PhpSamlSpAuthentication' => [
//        'userIdAttribute' => 'eduPersonTargetedID',
//        //'userIdAttribute' => 'eduPersonPrincipalName',

//        // ** AUTHORIZATION | PERMISSIONS **
//        //'permissionAttribute' => [
//        //      'eduPersonEntitlement',
//        //      //'eduPersonAffiliation',
//        //],

//        // AuthnContext required for *all* users
//        //'authnContext' => ['urn:oasis:names:tc:SAML:2.0:ac:classes:TimesyncToken'],

//        // Users with certain permissions obtained through
//        // "permissionAttribute" MUST also have ANY of the listed
//        // AuthnContexts. If they currently don't, a new authentication is
//        // triggered to obtain it
//        //'permissionAuthnContext' => [
//        //    'http://eduvpn.org/role/admin' => ['urn:oasis:names:tc:SAML:2.0:ac:classes:TimesyncToken'],
//        //],
//    ],

//// XXX make sure permissionAttribute is array
//    // SAML (mod_auth_mellon)
//    'MellonAuthentication' => [
//        // OID for eduPersonTargetedId
//        'userIdAttribute' => 'MELLON_urn:oid:1_3_6_1_4_1_5923_1_1_1_10',
//        // OID for eduPersonPrincipalName
//        //'userIdAttribute' => 'MELLON_urn:oid:1_3_6_1_4_1_5923_1_1_1_6',

//        // ** AUTHORIZATION | PERMISSIONS **
//        // OID for eduPersonEntitlement
//        //'permissionAttribute' => 'MELLON_urn:oid:1_3_6_1_4_1_5923_1_1_1_7',
//        // OID for eduPersonAffiliation
//        //'permissionAttribute' => 'MELLON_urn:oid:1_3_6_1_4_1_5923_1_1_1_1',
//    ],

//        // XXX make sure permissionAttribute is array
//    // SAML (Shibboleth)
//    'ShibAuthentication' => [
//        'userIdAttribute' => 'persistent-id',
//        //'userIdAttribute' => 'eppn',

//        // ** AUTHORIZATION | PERMISSIONS **
//        //'permissionAttribute' => 'entitlement',
//        //'permissionAttribute' => 'affiliation',
//    ],

    // the permission required to be able to access the "admin" portion of
    // the portal, see "permissionAttribute" in the authentication
    // configuration sections
    //'adminPermissionList' => ['http://eduvpn.org/role/admin'],

    // list of userIds that have access to the admin
    // XXX this should also not be enable by default?
    'adminUserIdList' => ['admin'],

    //'enableTwoFactor' => false,
    //'requireTwoFactor' => false,

    // Require Users to use 2FA
    // DEFAULT = false
    //'requireTwoFactor' => false,

    // XXX it seems two factor is enabled by default when not specifying anything,
    // probably make that optional

    // Available 2FA methods
    // DEFAULT = []
    //'twoFactorMethods' => ['totp'], // TOTP

    // supported languages in the UI, the first one mentioned is the default
//    'supportedLanguages' => [
//        'en_US' => 'English',
//        //'nl_NL' => 'Nederlands',
//        //'nb_NO' => 'norsk bokmål',
//        //'da_DK' => 'Dansk',
//        //'fr_FR' => 'Français',
//    ],

//    'Api' => [
//        //'consumerList' => [
//        //    '_CLIENT_ID_' => [
//        //        'redirect_uri_list' => [
//        //            '_REDIRECT_URI_1_',
//        //            '_REDIRECT_URI_2_',
//        //        ],
//        //        'display_name' => '_DISPLAY_NAME_',
//        //        'require_approval' => true,
//        //        'client_secret' => '_SECRET_',
//        //    ],
//        //],

//        // Enable Remote Access, i.e. users from other VPN servers listed in
//        // the below remoteAccessList files to access this VPN server through
//        // the OAuth API
//        // DEFAULT = false
//        //'remoteAccess' => false,
//    ],

    // DEFAULT = true (for remote connections)
    // XXX make sure of this!
    //'vpnDaemonTls' => false,

    // List of VPN profiles
    'vpnProfiles' => [
        'default' => [
            // The type of the VPN
            // REQUIRED
            'vpnType' => 'openvpn',
            //'vpnType' => 'wireguard',

            // The number of this profile, every profile per instance has a
            // unique number
            // REQUIRED
            'profileNumber' => 1,

            // The name of the profile as shown in the user and admin portals
            // REQUIRED
            'displayName' => 'Default',

            // The IPv4 range of the network that will be assigned to clients
            // REQUIRED
            'range' => '10.42.42.0/24',

            // The IPv6 range of the network that will be assigned to clients
            // REQUIRED
            'range6' => 'fd42::/64',

            // The hostname the VPN client(s) will connect to
            // REQUIRED
            'hostName' => 'vpn.example',

            // Whether or not to route all traffic from the client over the VPN
            // DEFAULT = true
            //'defaultGateway' => false,

            // IPv4 and IPv6 routes to push to the client, only used when
            // defaultGateway is false
            // DEFAULT = []
            //'routes' => [
            //    '192.168.1.0/24',
            //    'fd01:1:1:1::/64',
            //],

            // XXX think about DNS in default scenario, what about "split tunnel"?
            // IPv4 and IPv6 address of DNS server(s) to push to the client
            // default could be Quad9 when defaultGateway = true (default) and
            // default could be [] when defaultGateway = true, might be confusing?!
            // DEFAULT  = []
            // Quad9 (https://www.quad9.net)
            'dns' => ['9.9.9.9', '2620:fe::fe'],

            // The address the OpenVPN processes will listen on
            // DEFAULT = '::'
            //'listenIp' => '::',

            // The IP address to use for connecting to VPN node
            // DEFAULT = '127.0.0.1'
            //'nodeIp' => '127.0.0.1',

            // Block access to local LAN when VPN is active
            // DEFAULT = false
            //'blockLan' => false,

            // Whether or not to allow client-to-client traffic
            // DEFAULT = false
            //'clientToClient' => false,

            // Whether or not to enable OpenVPN logging
            // DEFAULT = false
            //'enableLog' => false,

            // Whether or not to enable ACLs for controlling who can connect
            // DEFAULT = false
            //'enableAcl' => false,

            // The list of permissions to allow access, requires enableAcl to
            // be true
            // DEFAULT  = []
            //'aclPermissionList' => [],

            // The protocols and ports the OpenVPN processes should use, MUST
            // be either 1, 2, 4, 8 or 16 proto/port combinations
            // DEFAULT = ['udp/1194', 'tcp/1194']
            //'vpnProtoPorts' => [
            //    'udp/1194',
            //    'tcp/1194',
            //],

            // List the protocols and ports exposed to the VPN clients. Useful
            // for OpenVPN port sharing. When empty (or missing), uses list
            // from vpnProtoPorts
            // DEFAULT = []
            //'exposedVpnProtoPorts' => [
            //    'udp/1194',
            //    'tcp/443'
            //],

            // DEFAULT = null
            //'dnsDomain' => 'example.org',

            // DEFAULT = []
            //'dnsDomainSearch' => ['a.example.org', 'b.example.org'],

            // Hide the profile from the user portal, i.e. do not allow the
            // user to choose it
            // DEFAULT = false
            //'hideProfile' => false,
        ],
    ],
];
