CREATE TABLE IF NOT EXISTS users(
    user_id VARCHAR(255) NOT NULL PRIMARY KEY,
    permission_list TEXT NOT NULL,
    is_disabled BOOLEAN NOT NULL
);
CREATE TABLE IF NOT EXISTS local_users (
    user_id VARCHAR(255) NOT NULL PRIMARY KEY,
    password_hash VARCHAR(255) NOT NULL,
    created_at VARCHAR(255) NOT NULL,
    UNIQUE(user_id)
);
CREATE TABLE IF NOT EXISTS oauth_authorizations (
    auth_key VARCHAR(255) NOT NULL PRIMARY KEY,
    client_id VARCHAR(255) NOT NULL,
    scope VARCHAR(255) NOT NULL,
    expires_at VARCHAR(255) NOT NULL,
    user_id VARCHAR(255) NOT NULL REFERENCES users(user_id) ON DELETE CASCADE,
    UNIQUE(auth_key)
);
CREATE TABLE IF NOT EXISTS oauth_refresh_token_log (
    auth_key VARCHAR(255) NOT NULL REFERENCES oauth_authorizations(auth_key) ON DELETE CASCADE,
    refresh_token_id VARCHAR(255) NOT NULL,
    UNIQUE(auth_key,refresh_token_id)
);
CREATE TABLE IF NOT EXISTS certificates(
    profile_id VARCHAR(255) NOT NULL,
    display_name VARCHAR(255) NOT NULL,
    common_name VARCHAR(255) UNIQUE NOT NULL,
    expires_at VARCHAR(255) NOT NULL,
    auth_key VARCHAR(255) REFERENCES oauth_authorizations(auth_key) ON DELETE CASCADE,
    user_id VARCHAR(255) NOT NULL REFERENCES users(user_id) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS wg_peers (
    profile_id VARCHAR(255) NOT NULL,
    display_name VARCHAR(255) NOT NULL,
    public_key VARCHAR(255) NOT NULL UNIQUE,
    ip_four VARCHAR(255) NOT NULL UNIQUE,
    ip_six VARCHAR(255) NOT NULL UNIQUE,
    expires_at VARCHAR(255) NOT NULL,
    auth_key VARCHAR(255) REFERENCES oauth_authorizations(auth_key) ON DELETE CASCADE,
    user_id VARCHAR(255) NOT NULL REFERENCES users(user_id) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS connection_log(
    user_id VARCHAR(255) NOT NULL,
    profile_id VARCHAR(255) NOT NULL,
    ip_four VARCHAR(255) NOT NULL,
    ip_six VARCHAR(255) NOT NULL,
    date_time VARCHAR(255) NOT NULL,
    event_type CHAR(1) NOT NULL
);
CREATE TABLE IF NOT EXISTS user_log(
    date_time VARCHAR(255) NOT NULL,
    log_level INTEGER NOT NULL,
    log_message TEXT NOT NULL,
    user_id VARCHAR(255) NOT NULL REFERENCES users(user_id) ON DELETE CASCADE
);
